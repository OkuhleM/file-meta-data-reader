{"ast":null,"code":"var _jsxFileName = \"/home/tcg-pc1/workspace/file-meta-data-reader/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [files, setFile] = useState([]);\n\n  const handleSubmit = e => {\n    const {\n      name,\n      size,\n      type,\n      lastModifiedDate\n    } = document.getElementById(\"file\").files['0'];\n    setFile([{\n      name,\n      size,\n      type,\n      lastModifiedDate\n    }]);\n    console.log(\"if it works show me\", e.target.files['0']);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 1\n    }, this), files.length > 0 && files.map(value => {\n      return;\n\n      /*#__PURE__*/\n      _jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"file:\", value.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"size:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"lastModified:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 3\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"Vpiu7iBc3YRUk7cgj2k+lV8rDgA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/tcg-pc1/workspace/file-meta-data-reader/src/App.js"],"names":["React","useState","App","files","setFile","handleSubmit","e","name","size","type","lastModifiedDate","document","getElementById","console","log","target","length","map","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEf,QAAK,CAACC,KAAD,EAAQC,OAAR,IAAmBH,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMI,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAK;AAACC,MAAAA,IAAD;AAAMC,MAAAA,IAAN;AAAWC,MAAAA,IAAX;AAAgBC,MAAAA;AAAhB,QAAoCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCT,KAAhC,CAAsC,GAAtC,CAAzC;AACAC,IAAAA,OAAO,CAAC,CAAC;AAAEG,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcC,MAAAA,IAAd;AAAoBC,MAAAA;AAApB,KAAD,CAAD,CAAP;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCR,CAAC,CAACS,MAAF,CAASZ,KAAT,CAAe,GAAf,CAAnC;AACD,GAJD;;AAQE,sBAAO;AAAA,4BACT;AAAM,MAAA,QAAQ,EAAEE,YAAhB;AAAA,8BAGA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,EASTF,KAAK,CAACa,MAAN,GAAa,CAAb,IAAkBb,KAAK,CAACc,GAAN,CAAWC,KAAD,IAAS;AACrC;;AACE;AAAA;AAAA,gCACF;AAAA,8BAASA,KAAK,CAACX,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,gBADE,eAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFE,eAGF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHE,eAKF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALE;AAAA;AAAA;AAAA;AAAA;AAAA;AAOD,KATiB,CATT;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAoBD;;GAhCQL,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n\nconst[files, setFile] = useState([]);\n\nconst handleSubmit = (e) => {\n  const{name,size,type,lastModifiedDate} = document.getElementById(\"file\").files['0'];\n  setFile([{ name, size, type, lastModifiedDate }])\n  console.log(\"if it works show me\", e.target.files['0']);\n}\n\n\n\n  return <div>\n<form onSubmit={handleSubmit}\n\n>\n<input type=\"file\" id=\"file\"></input>\n<button>Upload</button>\n</form>\n\n{\nfiles.length>0 && files.map((value)=>{\nreturn\n  <ul>\n<p>file:{value.name}</p>\n<p>size:</p>\n<p>type:</p>\n\n<p>lastModified:</p>\n  </ul>\n})}\n  </div>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}