{"ast":null,"code":"var _jsxFileName = \"/home/tcg-pc1/workspace/file-meta-data-reader/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import { Card, CardBody, CardTitle, Button, Row, Col, CardText, FormGroup, Label, Input } from \"reactstrap\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormData() {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState({});\n  const [files, setFilesList] = useState([]);\n  const [image, setImage] = useState(\"\");\n\n  const handleChange = e => {\n    setImage(URL.createObjectURL(e.target.files[0]));\n  };\n\n  const onClickShow = props => {\n    const {\n      name,\n      type,\n      size\n    } = props;\n    console.log(`props`, props);\n    setSelectedFile({\n      name,\n      type,\n      size\n    });\n  };\n\n  const handleSubmission = e => {\n    e.preventDefault();\n    let file = document.getElementsByName(\"file\")[0].files[\"0\"];\n    const {\n      name,\n      type,\n      size\n    } = file;\n\n    if (name && type && size) {\n      setFilesList([...files, {\n        name: file.name,\n        type: file.type,\n        size: file.size\n      }]);\n      console.log(\"tumisang\", file.name);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmission(e),\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"file\",\n          name: \"file\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"object\", {\n              data: image,\n              type: \"application/pdf\",\n              width: \"100%\",\n              height: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n            tag: \"h1\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Click on file name to show file information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 7\n            }, this), files.map(val => {\n              return /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => onClickShow(val),\n                color: \"success\",\n                outline: true,\n                style: {\n                  color: \"red\"\n                },\n                children: [\"File Name: \", val.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          body: true,\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            tag: \"h5\",\n            children: \"File Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(CardText, {\n            className: \"CardText\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              disabled: true,\n              color: \"success\",\n              outline: true,\n              children: [\"Name: \", selectedFile.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 2\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 2\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: true,\n              color: \"info\",\n              outline: true,\n              children: [\"Type: \", selectedFile.type]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: true,\n              color: \"warning\",\n              outline: true,\n              children: [\"Size: \", selectedFile.size]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormData, \"I0idLSXDtZM2jm1j5Z/xvAegNPM=\");\n\n_c = FormData;\nexport default FormData;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormData\");","map":{"version":3,"sources":["/home/tcg-pc1/workspace/file-meta-data-reader/src/App.js"],"names":["React","useState","FormData","selectedFile","setSelectedFile","files","setFilesList","image","setImage","handleChange","e","URL","createObjectURL","target","onClickShow","props","name","type","size","console","log","handleSubmission","preventDefault","file","document","getElementsByName","map","val","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// import { Card, CardBody, CardTitle, Button, Row, Col, CardText, FormGroup, Label, Input } from \"reactstrap\";\n\nfunction FormData() {\n  const [selectedFile, setSelectedFile] = useState({});\n  const [files, setFilesList] = useState([]);\n     const [image,  setImage] = useState(\"\")\n\nconst handleChange = (e) =>{\n       setImage(URL.createObjectURL(e.target.files[0]))\n     }\n\n  const onClickShow = (props) => {\n    const { name, type, size } = props;\n    console.log(`props`, props);\n    setSelectedFile({\n      name,\n      type,\n      size,\n    });\n  };\n\n  const handleSubmission = (e) => {\n    e.preventDefault();\n    let file = document.getElementsByName(\"file\")[0].files[\"0\"];\n    const { name, type, size } = file;\n    if (name && type && size) {\n      setFilesList([\n        ...files,\n        {\n          name: file.name,\n          type: file.type,\n          size: file.size,\n        },\n      ]);\n\n      console.log(\"tumisang\",file.name)\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={(e) => handleSubmission(e)}>\n        <FormGroup>\n    <Input\n      type=\"file\" name=\"file\" \n      onChange={handleChange}\n    />\n    </FormGroup>\n\n        <div>\n          <Button>Submit</Button>\n        </div>\n      </form>\n\n      <div>\n  <Card\n  >\n    <CardBody>\n    <div>\n    <object data={image} type=\"application/pdf\" width=\"100%\" height=\"100%\"></object>\n    </div>\n\n      <CardTitle tag=\"h1\">\n      <h4>Click on file name to show file information</h4>\n{files.map((val) => {\n            return  <Button onClick={() => onClickShow(val)}  color=\"success\"\n    outline style={{color:\"red\", }}>File Name: {val.name}</Button>;\n          })}     \n<div>\n \n</div>\n          \n           </CardTitle>\n       \n    </CardBody>\n  </Card>\n</div>\n\n\n<Row >\n  <Col sm=\"12\">\n    <Card body >\n      <CardTitle tag=\"h5\">\nFile Information     \n </CardTitle>\n      <CardText className=\"CardText\">\n <Button disabled color=\"success\" outline>Name: {selectedFile.name}</Button>\n <br />\n          <Button disabled color=\"info\" outline>Type: {selectedFile.type}</Button>\n           <br />\n\n          <Button disabled color=\"warning\" outline>Size: {selectedFile.size}</Button>\n                    {/* <Button disabled color=\"warning\" outline>Blob: {selectedFile}</Button> */}\n\n\n      </CardText>\n      \n    </Card>\n  </Col>\n \n</Row>\n    </div>\n  );\n}\n\nexport default FormData;\n"]},"metadata":{},"sourceType":"module"}